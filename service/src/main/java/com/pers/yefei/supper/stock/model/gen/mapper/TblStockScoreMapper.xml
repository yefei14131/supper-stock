<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pers.yefei.supper.stock.model.gen.dao.TblStockScoreMapper">
  <resultMap id="BaseResultMap" type="com.pers.yefei.supper.stock.model.gen.pojo.TblStockScore">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stockCode" jdbcType="VARCHAR" property="stockCode" />
    <result column="stockName" jdbcType="VARCHAR" property="stockName" />
    <result column="companyHonorScore" jdbcType="INTEGER" property="companyHonorScore" />
    <result column="businessStatusScore" jdbcType="INTEGER" property="businessStatusScore" />
    <result column="achievementsAppraisalScore" jdbcType="INTEGER" property="achievementsAppraisalScore" />
    <result column="achievementsGrowupScore" jdbcType="INTEGER" property="achievementsGrowupScore" />
    <result column="profitAbilityScore" jdbcType="INTEGER" property="profitAbilityScore" />
    <result column="achievementsClueScore" jdbcType="INTEGER" property="achievementsClueScore" />
    <result column="marketplaceStyleScore" jdbcType="INTEGER" property="marketplaceStyleScore" />
    <result column="organizationHoldScore" jdbcType="INTEGER" property="organizationHoldScore" />
    <result column="organizationEmotionScore" jdbcType="INTEGER" property="organizationEmotionScore" />
    <result column="businessPreferenceScore" jdbcType="INTEGER" property="businessPreferenceScore" />
    <result column="successRateStatisticsScore" jdbcType="INTEGER" property="successRateStatisticsScore" />
    <result column="stockValuationScore" jdbcType="INTEGER" property="stockValuationScore" />
    <result column="totalScore" jdbcType="DOUBLE" property="totalScore" />
    <result column="marketRank" jdbcType="INTEGER" property="marketRank" />
    <result column="industryRank" jdbcType="INTEGER" property="industryRank" />
    <result column="industryDetail" jdbcType="VARCHAR" property="industryDetail" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="totalValue" jdbcType="INTEGER" property="totalValue" />
    <result column="flowValue" jdbcType="INTEGER" property="flowValue" />
    <result column="priceProfitAssetRatio" jdbcType="DOUBLE" property="priceProfitAssetRatio" />
    <result column="priceNetAssetRatio" jdbcType="DOUBLE" property="priceNetAssetRatio" />
    <result column="dealQuantity" jdbcType="DOUBLE" property="dealQuantity" />
    <result column="dealAmount" jdbcType="DOUBLE" property="dealAmount" />
    <result column="priceChange" jdbcType="DOUBLE" property="priceChange" />
    <result column="priceChangeRatio" jdbcType="DOUBLE" property="priceChangeRatio" />
    <result column="turnoverRatio" jdbcType="DOUBLE" property="turnoverRatio" />
    <result column="mainInflowAmount" jdbcType="DOUBLE" property="mainInflowAmount" />
    <result column="mainOutflowAmount" jdbcType="DOUBLE" property="mainOutflowAmount" />
    <result column="netInflow" jdbcType="DOUBLE" property="netInflow" />
    <result column="openPrice" jdbcType="DOUBLE" property="openPrice" />
    <result column="maxPrice" jdbcType="DOUBLE" property="maxPrice" />
    <result column="minPrice" jdbcType="DOUBLE" property="minPrice" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="syl" jdbcType="DOUBLE" property="syl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, stockCode, stockName, companyHonorScore, businessStatusScore, achievementsAppraisalScore, 
    achievementsGrowupScore, profitAbilityScore, achievementsClueScore, marketplaceStyleScore, 
    organizationHoldScore, organizationEmotionScore, businessPreferenceScore, successRateStatisticsScore, 
    stockValuationScore, totalScore, marketRank, industryRank, industryDetail, date, 
    updateTime, totalValue, flowValue, priceProfitAssetRatio, priceNetAssetRatio, dealQuantity, 
    dealAmount, priceChange, priceChangeRatio, turnoverRatio, mainInflowAmount, mainOutflowAmount, 
    netInflow, openPrice, maxPrice, minPrice, price, syl
  </sql>
  <select id="selectByExample" parameterType="com.pers.yefei.supper.stock.model.gen.pojo.TblStockScoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_stock_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_score
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tbl_stock_score
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pers.yefei.supper.stock.model.gen.pojo.TblStockScoreExample">
    delete from tbl_stock_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pers.yefei.supper.stock.model.gen.pojo.TblStockScore">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tbl_stock_score (stockCode, stockName, companyHonorScore, 
      businessStatusScore, achievementsAppraisalScore, 
      achievementsGrowupScore, profitAbilityScore, 
      achievementsClueScore, marketplaceStyleScore, 
      organizationHoldScore, organizationEmotionScore, 
      businessPreferenceScore, successRateStatisticsScore, 
      stockValuationScore, totalScore, marketRank, 
      industryRank, industryDetail, date, 
      updateTime, totalValue, flowValue, 
      priceProfitAssetRatio, priceNetAssetRatio, 
      dealQuantity, dealAmount, priceChange, 
      priceChangeRatio, turnoverRatio, mainInflowAmount, 
      mainOutflowAmount, netInflow, openPrice, 
      maxPrice, minPrice, price, 
      syl)
    values (#{stockCode,jdbcType=VARCHAR}, #{stockName,jdbcType=VARCHAR}, #{companyHonorScore,jdbcType=INTEGER}, 
      #{businessStatusScore,jdbcType=INTEGER}, #{achievementsAppraisalScore,jdbcType=INTEGER}, 
      #{achievementsGrowupScore,jdbcType=INTEGER}, #{profitAbilityScore,jdbcType=INTEGER}, 
      #{achievementsClueScore,jdbcType=INTEGER}, #{marketplaceStyleScore,jdbcType=INTEGER}, 
      #{organizationHoldScore,jdbcType=INTEGER}, #{organizationEmotionScore,jdbcType=INTEGER}, 
      #{businessPreferenceScore,jdbcType=INTEGER}, #{successRateStatisticsScore,jdbcType=INTEGER}, 
      #{stockValuationScore,jdbcType=INTEGER}, #{totalScore,jdbcType=DOUBLE}, #{marketRank,jdbcType=INTEGER}, 
      #{industryRank,jdbcType=INTEGER}, #{industryDetail,jdbcType=VARCHAR}, #{date,jdbcType=DATE}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{totalValue,jdbcType=INTEGER}, #{flowValue,jdbcType=INTEGER}, 
      #{priceProfitAssetRatio,jdbcType=DOUBLE}, #{priceNetAssetRatio,jdbcType=DOUBLE}, 
      #{dealQuantity,jdbcType=DOUBLE}, #{dealAmount,jdbcType=DOUBLE}, #{priceChange,jdbcType=DOUBLE}, 
      #{priceChangeRatio,jdbcType=DOUBLE}, #{turnoverRatio,jdbcType=DOUBLE}, #{mainInflowAmount,jdbcType=DOUBLE}, 
      #{mainOutflowAmount,jdbcType=DOUBLE}, #{netInflow,jdbcType=DOUBLE}, #{openPrice,jdbcType=DOUBLE}, 
      #{maxPrice,jdbcType=DOUBLE}, #{minPrice,jdbcType=DOUBLE}, #{price,jdbcType=DOUBLE}, 
      #{syl,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.pers.yefei.supper.stock.model.gen.pojo.TblStockScore">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tbl_stock_score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stockCode != null">
        stockCode,
      </if>
      <if test="stockName != null">
        stockName,
      </if>
      <if test="companyHonorScore != null">
        companyHonorScore,
      </if>
      <if test="businessStatusScore != null">
        businessStatusScore,
      </if>
      <if test="achievementsAppraisalScore != null">
        achievementsAppraisalScore,
      </if>
      <if test="achievementsGrowupScore != null">
        achievementsGrowupScore,
      </if>
      <if test="profitAbilityScore != null">
        profitAbilityScore,
      </if>
      <if test="achievementsClueScore != null">
        achievementsClueScore,
      </if>
      <if test="marketplaceStyleScore != null">
        marketplaceStyleScore,
      </if>
      <if test="organizationHoldScore != null">
        organizationHoldScore,
      </if>
      <if test="organizationEmotionScore != null">
        organizationEmotionScore,
      </if>
      <if test="businessPreferenceScore != null">
        businessPreferenceScore,
      </if>
      <if test="successRateStatisticsScore != null">
        successRateStatisticsScore,
      </if>
      <if test="stockValuationScore != null">
        stockValuationScore,
      </if>
      <if test="totalScore != null">
        totalScore,
      </if>
      <if test="marketRank != null">
        marketRank,
      </if>
      <if test="industryRank != null">
        industryRank,
      </if>
      <if test="industryDetail != null">
        industryDetail,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="totalValue != null">
        totalValue,
      </if>
      <if test="flowValue != null">
        flowValue,
      </if>
      <if test="priceProfitAssetRatio != null">
        priceProfitAssetRatio,
      </if>
      <if test="priceNetAssetRatio != null">
        priceNetAssetRatio,
      </if>
      <if test="dealQuantity != null">
        dealQuantity,
      </if>
      <if test="dealAmount != null">
        dealAmount,
      </if>
      <if test="priceChange != null">
        priceChange,
      </if>
      <if test="priceChangeRatio != null">
        priceChangeRatio,
      </if>
      <if test="turnoverRatio != null">
        turnoverRatio,
      </if>
      <if test="mainInflowAmount != null">
        mainInflowAmount,
      </if>
      <if test="mainOutflowAmount != null">
        mainOutflowAmount,
      </if>
      <if test="netInflow != null">
        netInflow,
      </if>
      <if test="openPrice != null">
        openPrice,
      </if>
      <if test="maxPrice != null">
        maxPrice,
      </if>
      <if test="minPrice != null">
        minPrice,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="syl != null">
        syl,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stockCode != null">
        #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="stockName != null">
        #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="companyHonorScore != null">
        #{companyHonorScore,jdbcType=INTEGER},
      </if>
      <if test="businessStatusScore != null">
        #{businessStatusScore,jdbcType=INTEGER},
      </if>
      <if test="achievementsAppraisalScore != null">
        #{achievementsAppraisalScore,jdbcType=INTEGER},
      </if>
      <if test="achievementsGrowupScore != null">
        #{achievementsGrowupScore,jdbcType=INTEGER},
      </if>
      <if test="profitAbilityScore != null">
        #{profitAbilityScore,jdbcType=INTEGER},
      </if>
      <if test="achievementsClueScore != null">
        #{achievementsClueScore,jdbcType=INTEGER},
      </if>
      <if test="marketplaceStyleScore != null">
        #{marketplaceStyleScore,jdbcType=INTEGER},
      </if>
      <if test="organizationHoldScore != null">
        #{organizationHoldScore,jdbcType=INTEGER},
      </if>
      <if test="organizationEmotionScore != null">
        #{organizationEmotionScore,jdbcType=INTEGER},
      </if>
      <if test="businessPreferenceScore != null">
        #{businessPreferenceScore,jdbcType=INTEGER},
      </if>
      <if test="successRateStatisticsScore != null">
        #{successRateStatisticsScore,jdbcType=INTEGER},
      </if>
      <if test="stockValuationScore != null">
        #{stockValuationScore,jdbcType=INTEGER},
      </if>
      <if test="totalScore != null">
        #{totalScore,jdbcType=DOUBLE},
      </if>
      <if test="marketRank != null">
        #{marketRank,jdbcType=INTEGER},
      </if>
      <if test="industryRank != null">
        #{industryRank,jdbcType=INTEGER},
      </if>
      <if test="industryDetail != null">
        #{industryDetail,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalValue != null">
        #{totalValue,jdbcType=INTEGER},
      </if>
      <if test="flowValue != null">
        #{flowValue,jdbcType=INTEGER},
      </if>
      <if test="priceProfitAssetRatio != null">
        #{priceProfitAssetRatio,jdbcType=DOUBLE},
      </if>
      <if test="priceNetAssetRatio != null">
        #{priceNetAssetRatio,jdbcType=DOUBLE},
      </if>
      <if test="dealQuantity != null">
        #{dealQuantity,jdbcType=DOUBLE},
      </if>
      <if test="dealAmount != null">
        #{dealAmount,jdbcType=DOUBLE},
      </if>
      <if test="priceChange != null">
        #{priceChange,jdbcType=DOUBLE},
      </if>
      <if test="priceChangeRatio != null">
        #{priceChangeRatio,jdbcType=DOUBLE},
      </if>
      <if test="turnoverRatio != null">
        #{turnoverRatio,jdbcType=DOUBLE},
      </if>
      <if test="mainInflowAmount != null">
        #{mainInflowAmount,jdbcType=DOUBLE},
      </if>
      <if test="mainOutflowAmount != null">
        #{mainOutflowAmount,jdbcType=DOUBLE},
      </if>
      <if test="netInflow != null">
        #{netInflow,jdbcType=DOUBLE},
      </if>
      <if test="openPrice != null">
        #{openPrice,jdbcType=DOUBLE},
      </if>
      <if test="maxPrice != null">
        #{maxPrice,jdbcType=DOUBLE},
      </if>
      <if test="minPrice != null">
        #{minPrice,jdbcType=DOUBLE},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="syl != null">
        #{syl,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pers.yefei.supper.stock.model.gen.pojo.TblStockScoreExample" resultType="java.lang.Long">
    select count(*) from tbl_stock_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tbl_stock_score
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stockCode != null">
        stockCode = #{record.stockCode,jdbcType=VARCHAR},
      </if>
      <if test="record.stockName != null">
        stockName = #{record.stockName,jdbcType=VARCHAR},
      </if>
      <if test="record.companyHonorScore != null">
        companyHonorScore = #{record.companyHonorScore,jdbcType=INTEGER},
      </if>
      <if test="record.businessStatusScore != null">
        businessStatusScore = #{record.businessStatusScore,jdbcType=INTEGER},
      </if>
      <if test="record.achievementsAppraisalScore != null">
        achievementsAppraisalScore = #{record.achievementsAppraisalScore,jdbcType=INTEGER},
      </if>
      <if test="record.achievementsGrowupScore != null">
        achievementsGrowupScore = #{record.achievementsGrowupScore,jdbcType=INTEGER},
      </if>
      <if test="record.profitAbilityScore != null">
        profitAbilityScore = #{record.profitAbilityScore,jdbcType=INTEGER},
      </if>
      <if test="record.achievementsClueScore != null">
        achievementsClueScore = #{record.achievementsClueScore,jdbcType=INTEGER},
      </if>
      <if test="record.marketplaceStyleScore != null">
        marketplaceStyleScore = #{record.marketplaceStyleScore,jdbcType=INTEGER},
      </if>
      <if test="record.organizationHoldScore != null">
        organizationHoldScore = #{record.organizationHoldScore,jdbcType=INTEGER},
      </if>
      <if test="record.organizationEmotionScore != null">
        organizationEmotionScore = #{record.organizationEmotionScore,jdbcType=INTEGER},
      </if>
      <if test="record.businessPreferenceScore != null">
        businessPreferenceScore = #{record.businessPreferenceScore,jdbcType=INTEGER},
      </if>
      <if test="record.successRateStatisticsScore != null">
        successRateStatisticsScore = #{record.successRateStatisticsScore,jdbcType=INTEGER},
      </if>
      <if test="record.stockValuationScore != null">
        stockValuationScore = #{record.stockValuationScore,jdbcType=INTEGER},
      </if>
      <if test="record.totalScore != null">
        totalScore = #{record.totalScore,jdbcType=DOUBLE},
      </if>
      <if test="record.marketRank != null">
        marketRank = #{record.marketRank,jdbcType=INTEGER},
      </if>
      <if test="record.industryRank != null">
        industryRank = #{record.industryRank,jdbcType=INTEGER},
      </if>
      <if test="record.industryDetail != null">
        industryDetail = #{record.industryDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.totalValue != null">
        totalValue = #{record.totalValue,jdbcType=INTEGER},
      </if>
      <if test="record.flowValue != null">
        flowValue = #{record.flowValue,jdbcType=INTEGER},
      </if>
      <if test="record.priceProfitAssetRatio != null">
        priceProfitAssetRatio = #{record.priceProfitAssetRatio,jdbcType=DOUBLE},
      </if>
      <if test="record.priceNetAssetRatio != null">
        priceNetAssetRatio = #{record.priceNetAssetRatio,jdbcType=DOUBLE},
      </if>
      <if test="record.dealQuantity != null">
        dealQuantity = #{record.dealQuantity,jdbcType=DOUBLE},
      </if>
      <if test="record.dealAmount != null">
        dealAmount = #{record.dealAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.priceChange != null">
        priceChange = #{record.priceChange,jdbcType=DOUBLE},
      </if>
      <if test="record.priceChangeRatio != null">
        priceChangeRatio = #{record.priceChangeRatio,jdbcType=DOUBLE},
      </if>
      <if test="record.turnoverRatio != null">
        turnoverRatio = #{record.turnoverRatio,jdbcType=DOUBLE},
      </if>
      <if test="record.mainInflowAmount != null">
        mainInflowAmount = #{record.mainInflowAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.mainOutflowAmount != null">
        mainOutflowAmount = #{record.mainOutflowAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.netInflow != null">
        netInflow = #{record.netInflow,jdbcType=DOUBLE},
      </if>
      <if test="record.openPrice != null">
        openPrice = #{record.openPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.maxPrice != null">
        maxPrice = #{record.maxPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.minPrice != null">
        minPrice = #{record.minPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.syl != null">
        syl = #{record.syl,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tbl_stock_score
    set id = #{record.id,jdbcType=INTEGER},
      stockCode = #{record.stockCode,jdbcType=VARCHAR},
      stockName = #{record.stockName,jdbcType=VARCHAR},
      companyHonorScore = #{record.companyHonorScore,jdbcType=INTEGER},
      businessStatusScore = #{record.businessStatusScore,jdbcType=INTEGER},
      achievementsAppraisalScore = #{record.achievementsAppraisalScore,jdbcType=INTEGER},
      achievementsGrowupScore = #{record.achievementsGrowupScore,jdbcType=INTEGER},
      profitAbilityScore = #{record.profitAbilityScore,jdbcType=INTEGER},
      achievementsClueScore = #{record.achievementsClueScore,jdbcType=INTEGER},
      marketplaceStyleScore = #{record.marketplaceStyleScore,jdbcType=INTEGER},
      organizationHoldScore = #{record.organizationHoldScore,jdbcType=INTEGER},
      organizationEmotionScore = #{record.organizationEmotionScore,jdbcType=INTEGER},
      businessPreferenceScore = #{record.businessPreferenceScore,jdbcType=INTEGER},
      successRateStatisticsScore = #{record.successRateStatisticsScore,jdbcType=INTEGER},
      stockValuationScore = #{record.stockValuationScore,jdbcType=INTEGER},
      totalScore = #{record.totalScore,jdbcType=DOUBLE},
      marketRank = #{record.marketRank,jdbcType=INTEGER},
      industryRank = #{record.industryRank,jdbcType=INTEGER},
      industryDetail = #{record.industryDetail,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=DATE},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      totalValue = #{record.totalValue,jdbcType=INTEGER},
      flowValue = #{record.flowValue,jdbcType=INTEGER},
      priceProfitAssetRatio = #{record.priceProfitAssetRatio,jdbcType=DOUBLE},
      priceNetAssetRatio = #{record.priceNetAssetRatio,jdbcType=DOUBLE},
      dealQuantity = #{record.dealQuantity,jdbcType=DOUBLE},
      dealAmount = #{record.dealAmount,jdbcType=DOUBLE},
      priceChange = #{record.priceChange,jdbcType=DOUBLE},
      priceChangeRatio = #{record.priceChangeRatio,jdbcType=DOUBLE},
      turnoverRatio = #{record.turnoverRatio,jdbcType=DOUBLE},
      mainInflowAmount = #{record.mainInflowAmount,jdbcType=DOUBLE},
      mainOutflowAmount = #{record.mainOutflowAmount,jdbcType=DOUBLE},
      netInflow = #{record.netInflow,jdbcType=DOUBLE},
      openPrice = #{record.openPrice,jdbcType=DOUBLE},
      maxPrice = #{record.maxPrice,jdbcType=DOUBLE},
      minPrice = #{record.minPrice,jdbcType=DOUBLE},
      price = #{record.price,jdbcType=DOUBLE},
      syl = #{record.syl,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pers.yefei.supper.stock.model.gen.pojo.TblStockScore">
    update tbl_stock_score
    <set>
      <if test="stockCode != null">
        stockCode = #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="stockName != null">
        stockName = #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="companyHonorScore != null">
        companyHonorScore = #{companyHonorScore,jdbcType=INTEGER},
      </if>
      <if test="businessStatusScore != null">
        businessStatusScore = #{businessStatusScore,jdbcType=INTEGER},
      </if>
      <if test="achievementsAppraisalScore != null">
        achievementsAppraisalScore = #{achievementsAppraisalScore,jdbcType=INTEGER},
      </if>
      <if test="achievementsGrowupScore != null">
        achievementsGrowupScore = #{achievementsGrowupScore,jdbcType=INTEGER},
      </if>
      <if test="profitAbilityScore != null">
        profitAbilityScore = #{profitAbilityScore,jdbcType=INTEGER},
      </if>
      <if test="achievementsClueScore != null">
        achievementsClueScore = #{achievementsClueScore,jdbcType=INTEGER},
      </if>
      <if test="marketplaceStyleScore != null">
        marketplaceStyleScore = #{marketplaceStyleScore,jdbcType=INTEGER},
      </if>
      <if test="organizationHoldScore != null">
        organizationHoldScore = #{organizationHoldScore,jdbcType=INTEGER},
      </if>
      <if test="organizationEmotionScore != null">
        organizationEmotionScore = #{organizationEmotionScore,jdbcType=INTEGER},
      </if>
      <if test="businessPreferenceScore != null">
        businessPreferenceScore = #{businessPreferenceScore,jdbcType=INTEGER},
      </if>
      <if test="successRateStatisticsScore != null">
        successRateStatisticsScore = #{successRateStatisticsScore,jdbcType=INTEGER},
      </if>
      <if test="stockValuationScore != null">
        stockValuationScore = #{stockValuationScore,jdbcType=INTEGER},
      </if>
      <if test="totalScore != null">
        totalScore = #{totalScore,jdbcType=DOUBLE},
      </if>
      <if test="marketRank != null">
        marketRank = #{marketRank,jdbcType=INTEGER},
      </if>
      <if test="industryRank != null">
        industryRank = #{industryRank,jdbcType=INTEGER},
      </if>
      <if test="industryDetail != null">
        industryDetail = #{industryDetail,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalValue != null">
        totalValue = #{totalValue,jdbcType=INTEGER},
      </if>
      <if test="flowValue != null">
        flowValue = #{flowValue,jdbcType=INTEGER},
      </if>
      <if test="priceProfitAssetRatio != null">
        priceProfitAssetRatio = #{priceProfitAssetRatio,jdbcType=DOUBLE},
      </if>
      <if test="priceNetAssetRatio != null">
        priceNetAssetRatio = #{priceNetAssetRatio,jdbcType=DOUBLE},
      </if>
      <if test="dealQuantity != null">
        dealQuantity = #{dealQuantity,jdbcType=DOUBLE},
      </if>
      <if test="dealAmount != null">
        dealAmount = #{dealAmount,jdbcType=DOUBLE},
      </if>
      <if test="priceChange != null">
        priceChange = #{priceChange,jdbcType=DOUBLE},
      </if>
      <if test="priceChangeRatio != null">
        priceChangeRatio = #{priceChangeRatio,jdbcType=DOUBLE},
      </if>
      <if test="turnoverRatio != null">
        turnoverRatio = #{turnoverRatio,jdbcType=DOUBLE},
      </if>
      <if test="mainInflowAmount != null">
        mainInflowAmount = #{mainInflowAmount,jdbcType=DOUBLE},
      </if>
      <if test="mainOutflowAmount != null">
        mainOutflowAmount = #{mainOutflowAmount,jdbcType=DOUBLE},
      </if>
      <if test="netInflow != null">
        netInflow = #{netInflow,jdbcType=DOUBLE},
      </if>
      <if test="openPrice != null">
        openPrice = #{openPrice,jdbcType=DOUBLE},
      </if>
      <if test="maxPrice != null">
        maxPrice = #{maxPrice,jdbcType=DOUBLE},
      </if>
      <if test="minPrice != null">
        minPrice = #{minPrice,jdbcType=DOUBLE},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="syl != null">
        syl = #{syl,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pers.yefei.supper.stock.model.gen.pojo.TblStockScore">
    update tbl_stock_score
    set stockCode = #{stockCode,jdbcType=VARCHAR},
      stockName = #{stockName,jdbcType=VARCHAR},
      companyHonorScore = #{companyHonorScore,jdbcType=INTEGER},
      businessStatusScore = #{businessStatusScore,jdbcType=INTEGER},
      achievementsAppraisalScore = #{achievementsAppraisalScore,jdbcType=INTEGER},
      achievementsGrowupScore = #{achievementsGrowupScore,jdbcType=INTEGER},
      profitAbilityScore = #{profitAbilityScore,jdbcType=INTEGER},
      achievementsClueScore = #{achievementsClueScore,jdbcType=INTEGER},
      marketplaceStyleScore = #{marketplaceStyleScore,jdbcType=INTEGER},
      organizationHoldScore = #{organizationHoldScore,jdbcType=INTEGER},
      organizationEmotionScore = #{organizationEmotionScore,jdbcType=INTEGER},
      businessPreferenceScore = #{businessPreferenceScore,jdbcType=INTEGER},
      successRateStatisticsScore = #{successRateStatisticsScore,jdbcType=INTEGER},
      stockValuationScore = #{stockValuationScore,jdbcType=INTEGER},
      totalScore = #{totalScore,jdbcType=DOUBLE},
      marketRank = #{marketRank,jdbcType=INTEGER},
      industryRank = #{industryRank,jdbcType=INTEGER},
      industryDetail = #{industryDetail,jdbcType=VARCHAR},
      date = #{date,jdbcType=DATE},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      totalValue = #{totalValue,jdbcType=INTEGER},
      flowValue = #{flowValue,jdbcType=INTEGER},
      priceProfitAssetRatio = #{priceProfitAssetRatio,jdbcType=DOUBLE},
      priceNetAssetRatio = #{priceNetAssetRatio,jdbcType=DOUBLE},
      dealQuantity = #{dealQuantity,jdbcType=DOUBLE},
      dealAmount = #{dealAmount,jdbcType=DOUBLE},
      priceChange = #{priceChange,jdbcType=DOUBLE},
      priceChangeRatio = #{priceChangeRatio,jdbcType=DOUBLE},
      turnoverRatio = #{turnoverRatio,jdbcType=DOUBLE},
      mainInflowAmount = #{mainInflowAmount,jdbcType=DOUBLE},
      mainOutflowAmount = #{mainOutflowAmount,jdbcType=DOUBLE},
      netInflow = #{netInflow,jdbcType=DOUBLE},
      openPrice = #{openPrice,jdbcType=DOUBLE},
      maxPrice = #{maxPrice,jdbcType=DOUBLE},
      minPrice = #{minPrice,jdbcType=DOUBLE},
      price = #{price,jdbcType=DOUBLE},
      syl = #{syl,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>